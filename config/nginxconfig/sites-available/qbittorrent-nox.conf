# remember replace your public zones and port
server {
    listen 80;
    listen [::]:80;
    server_name your_public_zones;
    return 301 https://your_public_zones$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your_public_zones;

    # at this point we haven't created the certificate yet, but that's ok.
    # if, when creating the certificate (see below) it goes to another folder, be sure
    # to change these lines accordingly
    ssl_certificate cert/your_public_zones.cert;
    ssl_certificate_key cert/your_public_zones.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_ecdh_curve prime256v1:secp384r1:secp521r1;
    ssl_session_cache shared:TLS:50m;
    ssl_session_timeout 1d; # default is 5 min
    ssl_session_tickets off;
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

#access_log            /var/log/nginx/your_public_zones.log;

    location / {
        proxy_pass         http://127.0.0.1:9999/;
        proxy_http_version 1.1;
        http2_push_preload on; # Enable http2 push

        proxy_set_header   Host               127.0.0.1:9999;
        proxy_set_header   X-Forwarded-Proto  $scheme;
        proxy_set_header   X-Forwarded-Host   $http_host;
        proxy_set_header   X-Forwarded-For    $remote_addr;
        proxy_set_header   X-Real-IP          $remote_addr;

        # optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once:
        #client_max_body_size 100M;

        # since v4.2.2, is possible to configure qBittorrent
        # to set the "Secure" flag for the session cookie automatically.
        # However, that option does nothing unless using qBittorrent's built-in HTTPS functionality.
        # For this use case, where qBittorrent itself is using plain HTTP
        # (and regardless of whether or not the external website uses HTTPS),
        # the flag must be set here, in the proxy configuration itself:
        proxy_cookie_path / "/; Secure";
    }

    # OPTIONAL: serve static HTML files at the root of the domain, like a simple homepage
#    location / {
#        root /var/www/html;
#        try_files $uri $uri/ =404;
#    }

    # OPTIONAL: you can add more "location { (...) }" stanzas for other services, such as Nextcloud, etc
    #location /other_webapp {
        # change the location and port to the location and port the application is actually listening on
        #proxy_pass              http://localhost:8080/;
        #proxy_set_header        X-Forwarded-Proto           $scheme;
        #proxy_set_header        X-Forwarded-Host            $http_host;
        #proxy_set_header        X-Forwarded-For             $proxy_add_x_forwarded_for;
        #proxy_set_header        X-Real-IP                   $remote_addr;
    #}
}